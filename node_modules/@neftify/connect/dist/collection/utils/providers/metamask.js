/* *************************************** */
/* Detect the MetaMask Ethereum provider   */
/* *************************************** */
import { ethers } from "ethers";
/**
 * Verifies if the user has MetaMask installed in their device.
 * @return {boolean} true if metamask is detected, false otherwise
 */
const hasMetamask = () => {
  const { ethereum } = window;
  const hasMetaMaskInstalled = () => Boolean(ethereum && ethereum.isMetaMask);
  // If user does not have MetaMask installed
  if (hasMetaMaskInstalled() === false) {
    let hasMetamask = false;
    // The MetaMask extension provider is always available by the time this code is executed. Because of platform limitations, the mobile provider may not be injected until later in the page lifecycle. Because of this, the MetaMask provider dispatches the event `ethereum#initialized` on window when it is fully initialized.
    window.addEventListener("ethereum#initialized", hasMetaMaskInstalled, {
      once: true
    });
    // If the event is not dispatched by the end of the timeout,
    // the user probably doesn't have MetaMask installed.
    setTimeout(() => {
      hasMetamask = hasMetaMaskInstalled();
    }, 3000); // 3 seconds
    return hasMetamask;
  }
  return true;
};
/* *************************************** */
/* Connect with Metamask and ethersjs      */
/* *************************************** */
export async function connectWithMetamask() {
  if (hasMetamask()) {
    // A Web3Provider wraps a standard Web3 provider, which is
    // what MetaMask injects as window.ethereum into each page
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    // MetaMask requires requesting permission to connect users accounts
    await provider.send("eth_requestAccounts", []);
    // Getting connectionDetails data
    const signer = provider.getSigner();
    const address = await signer.getAddress();
    const networkId = await (await (await provider).getNetwork())
      .chainId;
    const balance = await signer.getBalance();
    return { address, networkId, provider, balance };
  }
  else {
    alert("Metamask is not available, make sure you have it installed or try another wallet");
    console.error("[NeftifyConnect]: MetaMask not detected");
  }
}
