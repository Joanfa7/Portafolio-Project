import { EventEmitter, JSX, ComponentInterface } from "../../stencil-public-runtime";
/** @internal */
export declare class NeftifyInput implements ComponentInterface {
  /** Host element */
  el: HTMLElement;
  /**
   * Value
   */
  value: string | number;
  /**
   * Type
   */
  type: "text" | "number" | "email" | "password";
  /**
   * Size
   */
  size: "small" | "normal" | "medium" | "large";
  /**
   * The name of the control, which is submitted with the form data.
   */
  name: string;
  /**
   * Set if the user must fill in a value before submitting a form. Input state must be set back after.
   */
  required: boolean;
  /**
   * The input will look similar to a normal one, but is not editable
   */
  readonly: boolean;
  /**
   * Removes the background, border, shadow, and horizontal padding
   */
  isStatic: boolean;
  /**
   * Set if the element will have its spelling and grammar checked.
   */
  spellcheck: boolean;
  /**
   * Works with the min and max attributes to limit the increments at which a value can be set.
   * Possible values are: `"any"` or a positive floating point number.
   */
  step?: string;
  /**
   * Set if the user cannot interact with the input.
   */
  disabled: boolean;
  /**
   * A hint to the browser for which keyboard to display.
   * This attribute applies when the value of the type attribute is `"text"`, `"password"`, `"email"`, or `"url"`.
   * Possible values are: `"verbatim"`, `"latin"`, `"latin-name"`, `"latin-prose"`, `"full-width-latin"`, `"kana"`,
   * `"katakana"`, `"numeric"`, `"tel"`, `"email"`, `"url"`.
   */
  inputmode?: string;
  /**
   * The maximum value, which must not be less than its minimum (min attribute) value.
   */
  max?: string;
  /**
   * If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute
   * specifies the maximum number of characters that the user can enter.
   */
  maxlength?: number;
  /**
   * The minimum value, which must not be greater than its maximum (max attribute) value.
   */
  min?: string;
  /**
   * If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute
   * specifies the minimum number of characters that the user can enter.
   */
  minlength?: number;
  /**
   * A regular expression that the value is checked against. The pattern must match the entire value, not just some
   * subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value
   * of the type attribute is `"text"`, `"search"`, `"tel"`, `"url"`, `"email"`, or `"password"`, otherwise it is ignored.
   */
  pattern?: string;
  /**
   * Instructional text that shows before the input has a value.
   */
  placeholder?: string | null;
  neftifyBlur: EventEmitter<void>;
  neftifyFocus: EventEmitter<void>;
  neftifyChange: EventEmitter<void>;
  neftifyInput: EventEmitter<void>;
  neftifyKeyDown: EventEmitter<void>;
  neftifyKeyUp: EventEmitter<void>;
  onBlur: (e: any) => void;
  onFocus: (e: any) => void;
  onKeyDown: (e: any) => void;
  onKeyUp: (e: any) => void;
  onInput: (e: any) => void;
  onChange: (e: any) => void;
  render(): JSX.Element;
}
